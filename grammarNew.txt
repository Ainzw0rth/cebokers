# -------- START --------
START -> GENERAL_STMT

# -------- GENERAL STATEMENT --------
GENERAL_STMT -> DEFS_STMT
GENERAL_STMT -> TRY_CATCH
GENERAL_STMT -> THROW_STMT
GENERAL_STMT -> ENTER
GENERAL_STMT -> GENERAL_STMT ENTER

# . VARIABLES
DEFS_STMT -> DEFS ENTER
DEFS_STMT -> DEFS
DEFS_STMT -> VAR_STMT 
DEFS_STMT -> VAR_STMT ENTER
DEFS_STMT -> LET_STMT 
DEFS_STMT -> LET_STMT ENTER
DEFS_STMT -> CONST_STMT 
DEFS_STMT -> CONST_STMT ENTER

DEFS -> VAR_NAME = DATA
DEFS -> VAR_NAME = DATA , DEFS
DEFS -> VAR_NAME
DEFS -> VAR_NAME , DEFS
DEFS -> VAR_NAME = DATA
DEFS -> VAR_NAME = DATA , DEFS
LET_STMT -> LET DEFS
CONST_STMT -> CONST DEFS
VAR_STMT -> VAR DEFS

# ------- DATA TYPES -------
DATA -> INT
DATA -> STRING
DATA -> NUMBER
DATA -> BOOLEAN
DATA -> NULL
DATA -> OBJECT
DATA -> ARRAY
DATA -> FUNCTION_CALL
DATA -> VAR_NAME
DATA -> EXPRESSION
BOOLEAN -> TRUE
BOOLEAN -> FALSE

# -------- TRY CATCH -------- (finally also included)
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER }  CATCH ( VAR_NAME ) ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER }  CATCH ( VAR_NAME ) { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER } FINALLY ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } FINALLY ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER } FINALLY { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } FINALLY { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) ENTER { ENTER GENERAL_STMT ENTER } FINALLY ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) ENTER { ENTER GENERAL_STMT ENTER } FINALLY ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) { ENTER GENERAL_STMT ENTER } FINALLY ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) { ENTER GENERAL_STMT ENTER } FINALLY ENTER { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) ENTER { ENTER GENERAL_STMT ENTER } FINALLY { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) ENTER { ENTER GENERAL_STMT ENTER } FINALLY { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY ENTER { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) { ENTER GENERAL_STMT ENTER } FINALLY { ENTER GENERAL_STMT ENTER }
TRY_CATCH -> TRY { ENTER GENERAL_STMT ENTER } CATCH ( VAR_NAME ) { ENTER GENERAL_STMT ENTER } FINALLY { ENTER GENERAL_STMT ENTER }

# -------- THROW --------
THROW_STMT -> THROW_STMT ENTER
THROW_STMT -> THROW VAR_NAME
THROW_STMT -> THROW DATA
THROW_STMT -> THROW FUNCTION_CALL

# . OBJECT
OBJECT -> { E_ENTER OBJECT_BODY E_ENTER }
OBJECT -> VAR_NAME
OBJECT_BODY -> VAR_NAME : DATA
OBJECT_BODY -> VAR_NAME : DATA , OBJECT_BODY

# . ARRAY
ARRAY -> [ ARRAY_BODY ]
ARRAY_BODY -> DATA
ARRAY_BODY -> DATA , ARRAY_BODY

# -------- ENTER_STMT --------
ENTER -> ENTER ENTER
ENTER -> ENTER

# -------- COMMENT ---------

@